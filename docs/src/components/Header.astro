---
import { Icon } from 'astro-icon';
---

<div id="header">
  <button id="sidebar-toggle"><Icon width="30px" name="mdi:menu" /></button>
  <div id="theme-button-wrapper">
    <Icon id="sun" width="30px" name="mdi:white-balance-sunny" />
    <Icon id="moon" width="30px" name="mdi:weather-night" />
    <button id="theme-button"></button>
  </div>
  <a href="/" id="header-text">The Eludris Developer Portal</a>
  <a href="https://github.com/eludris/eludris">
    <Icon name="akar-icons:github-fill" width="30px" />
  </a>
  <button id="search">
    <Icon name="mdi:search" width="30px" />
  </button>
</div>
<div id="search-bar" style="display: none;">
  <input type="text" id="search-input" placeholder="Search For Something" />
  <span id="search-stats"></span>
  <div id="search-results"></div>
</div>

<script is:inline>
  const sidebar = document.getElementById('sidebar');
  const content = document.getElementById('content');

  let theme =
    localStorage.getItem('theme') ??
    (window.matchMedia?.('(prefers-color-scheme: dark)').matches
      ? 'dark'
      : 'light');

  let sidebarState =
    localStorage.getItem('sidebarState') ?? (window.innerWidth < 1000 ? 'in' : 'out');

  if (theme === 'dark') {
    document.documentElement.classList.add('dark');
  }

  if (sidebarState === 'in') {
    sidebar.classList.add('sidebar-hide');
    content.style.setProperty('--sidebar-width', '0');
  }

  document.getElementById('theme-button')?.addEventListener('click', () => {
    if (document.documentElement.classList.contains('dark')) {
      document.documentElement.classList.remove('dark');
      theme = 'light';
    } else {
      document.documentElement.classList.add('dark');
      theme = 'dark';
    }
    localStorage.setItem('theme', theme);
  });

  document.getElementById('sidebar-toggle').addEventListener('click', () => {
    if (sidebar.classList.contains('sidebar-hide')) {
      sidebar.classList.remove('sidebar-hide');
      content.style.removeProperty('--sidebar-width');
      sidebarState = 'out';
    } else {
      sidebar.classList.add('sidebar-hide');
      content.style.setProperty('--sidebar-width', '0');
      sidebarState = 'in';
    }
    localStorage.setItem('sidebarState', sidebarState);
  });
</script>

<script>
  const slot = document.getElementById('slot-wrapper')!;
  const header = document.getElementById('header')!;
  const search = document.getElementById('search')!;
  const searchBar = document.getElementById('search-bar')!;
  const searchInput = document.getElementById('search-input')! as HTMLInputElement;
  const searchStats = document.getElementById('search-stats')!;
  const searchResults = document.getElementById('search-results')!;
  let searchData: [{ text: string; route: string; content: string }] | null = null;
  let lastScroll = 0;

  slot.addEventListener('scroll', () => {
    if (slot.scrollTop > 0 && searchBar!.style.display == 'none') {
      header.style.borderBottomWidth = '1px';
    } else {
      header.style.borderBottomWidth = '0px';
    }
    if (Math.abs(lastScroll - slot!.scrollTop) > 50) {
      if (
        window.innerWidth < 1000 &&
        slot.scrollTop > lastScroll &&
        !header.classList.contains('header-hidden')
      ) {
        header.classList.add('header-hidden');
      } else if (
        window.innerWidth < 1000 &&
        slot.scrollTop < lastScroll &&
        header.classList.contains('header-hidden')
      ) {
        header.classList.remove('header-hidden');
      }
      lastScroll = slot!.scrollTop;
    }
  });

  search.addEventListener('click', () => {
    if (!searchData) {
      fetch('/search.json')
        .then((r) => r.json())
        .then((r) => (searchData = r));
    }
    if (searchBar.style.display == 'none') {
      searchBar.style.display = 'block';
      header.style.borderBottomWidth = '0px';
      searchInput!.focus();
    } else {
      searchBar.style.display = 'none';
    }
  });

  document.addEventListener('keydown', (e) => {
    if (e.key == '/') {
      if (!searchData) {
        fetch('/search.json')
          .then((r) => r.json())
          .then((r) => (searchData = r));
      }
      if (searchBar.style.display == 'none') {
        searchBar.style.display = 'block';
        header.style.borderBottomWidth = '0px';
        searchInput.focus();
      } else {
        searchBar.style.display = 'none';
      }
      e.preventDefault();
    }
  });

  searchInput!.addEventListener('input', () => {
    if (searchData) {
      if (!searchInput.value.length) {
        searchResults!.replaceChildren();
        searchStats!.style.display = 'none';
        return;
      }
      searchStats.style.display = 'inline-block';
      searchResults.replaceChildren(
        ...searchData
          .filter(
            (s) =>
              s.content.toLowerCase().includes(searchInput.value.toLowerCase()) ||
              s.text.toLowerCase().includes(searchInput.value.toLowerCase())
          )
          .map((s) => {
            let anchor = document.createElement('a');
            anchor.classList.add('search-result');
            anchor.href = s.route;
            let header = document.createElement('h3');
            header.innerHTML = s.text.replace(
              new RegExp(searchInput.value, 'gmi'),
              '<span style="background-color: var(--purple-600)">$&</span>'
            );
            anchor.appendChild(header);
            let span = document.createElement('span');
            let index = s.content.toLowerCase().indexOf(searchInput.value.toLowerCase());
            const excerptStart = Math.max(0, index - 200);
            let excerpt = s.content.substring(excerptStart, Math.max(excerptStart + 200, 400));
            span.innerHTML = excerpt.replace(
              new RegExp(searchInput.value, 'gmi'),
              '<span style="background-color: var(--purple-600)">$&</span>'
            );
            anchor.appendChild(span);
            return anchor;
          })
      );
      searchStats.innerText = `found ${searchResults!.children.length} results`;
    }
  });

  setTimeout(() => {
    document.getElementById('main')!.classList.remove('notransition');
  }, 0); // why the heck does this work???
</script>

<style>
  #header {
    position: sticky;
    top: 0;
    right: 0;
    width: 100%;
    display: flex;
    align-items: center;
    border: 0px solid var(--gray-400);
    background-color: var(--gray-100);
    padding: 5px 20px;
    box-sizing: border-box;
    transition: height ease-in-out 250ms, padding ease-in-out 250ms, opacity ease-in-out 50ms;
    gap: 5px;
    z-index: 1;
  }

  #header.header-hidden {
    height: 0;
    padding: 0;
    opacity: 0;
  }

  #header a {
    border: unset;
    color: inherit;
  }

  #header [astro-icon] {
    color: var(--gray-500);
    transition: color ease-in-out 125ms;
  }

  #header [astro-icon]:hover {
    color: var(--gray-600);
  }

  #header-text {
    font-size: 22px;
    margin: 10px auto;
    font-weight: 300;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  #header-text:hover {
    color: var(--color-text-100);
  }

  #theme-button-wrapper {
    position: relative;
    width: 30px;
    height: 30px;
    transition: color ease-in-out 200ms;
  }

  #theme-button-wrapper:hover > [astro-icon] {
    color: var(--gray-600);
  }

  #theme-button {
    position: absolute;
    border: unset;
    background-color: inherit;
    width: 30px;
    height: 30px;
    padding: 2px;
    cursor: pointer;
  }

  #theme-button-wrapper > [astro-icon] {
    position: absolute;
    transition: transform ease-in-out 250ms, opacity ease-in-out 250ms, color ease-in-out 125ms;
  }

  #search {
    border: unset;
    background-color: inherit;
    width: fit-content;
    height: fit-content;
    margin: 0;
    padding: 0;
    cursor: pointer;
  }

  #search-input {
    width: calc(100% - 30px);
    margin: 10px 15px 10px 15px;
    border: unset;
    background-color: var(--gray-300);
    outline: none;
    color: var(--color-text-100);
    border-radius: 5px;
    font-size: 18px;
  }

  #search-bar {
    background-color: var(--gray-200);
    border: 2px solid var(--gray-300);
    border-top: unset;
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
    padding: 10px;
    box-sizing: border-box;
    flex-shrink: 0; /* wtf why */
    overflow-y: auto;
    max-height: 90%;
  }

  #search-stats {
    display: none;
    text-align: center;
    width: 100%;
  }

  :global(.search-result) {
    color: var(--color-text-200);
    border: unset;
    cursor: pointer;
    transition: color ease-in-out 125ms;
  }

  :global(.search-result:hover) {
    color: var(--color-text-100);
  }

  :where(:root.dark #sun) {
    transform: translate(0, 100%);
    opacity: 0;
    z-index: -1;
  }

  :where(:root:not(.dark) #moon) {
    transform: translate(0, 100%);
    opacity: 0;
    z-index: -1;
  }

  #sidebar-toggle {
    border: unset;
    background-color: inherit;
    width: 30px;
    height: 30px;
    padding: 2px;
    cursor: pointer;
  }
</style>
