---
import Markdown from '@astrojs/markdown-component';
import Base from '../../layouts/Base.astro';
import { readFileSync } from 'fs';
import AUTODOC_ENTRIES from '../../../public/autodoc/index.json';
import type { ItemInfo } from '../../lib/types';
import data_to_md from './data_to_md';

export const getStaticPaths = () => {
  let paths: { params: { slug: string }; props: Props }[] = [];

  AUTODOC_ENTRIES.items.forEach((slug) => {
    slug = slug.split('.')[0];
    const name = slug
      .split('/')[1]
      .replace(/(?:^|_)([a-z0-9])/gm, (_, p1: string) => p1.toUpperCase())
      .replace(/[A-Z]/gm, ' $&')
      .trim();
    const data: ItemInfo = JSON.parse(readFileSync(`public/autodoc/${slug}.json`).toString());
    if (!data.hidden) {
      paths.push({ params: { slug }, props: { slug, name, data } });
    }
  });

  return paths;
};

export interface Props {
  slug: string;
  name: string;
  data: ItemInfo;
}

const { slug, name, data } = Astro.props;
---

<Base title={`${name} - Eludris Reference`} description={data.doc ?? undefined} slug={slug}>
  <Markdown content={data_to_md(data)} />
</Base>

<style>
  :global(.method) {
    background-color: var(--purple-500);
    padding: 3px 5px;
    border-radius: 5px;
    margin-right: 10px;
  }

  :global(.route) {
    font-family: monospace, 'Ubuntu', sans-serif;
  }

  :global(.special-segment) {
    color: var(--color-text-100);
  }
</style>
